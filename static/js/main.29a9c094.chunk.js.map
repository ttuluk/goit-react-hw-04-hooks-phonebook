{"version":3,"sources":["components/Form/Form.module.css","components/Contacts/Contacts.module.css","components/Contacts/Contacts.js","components/Filter/Filter.js","components/Form/Form.js","App.js","index.js"],"names":["module","exports","Contacts","contactNames","onDeleteContact","className","styles","contacts","title","contacts_list","map","elem","contacts_item","name","number","btn_delete","type","onClick","id","Filter","nameFilter","onChangeFilter","label","input","value","onChange","Form","useState","setContacts","nameInput","setNameInput","phoneNumber","setPhoneNumber","filter","setFilter","nameInputId","shortid","generate","phoneInputId","useEffect","window","localStorage","getItem","parsedContacts","JSON","parse","setItem","stringify","reset","deleteContact","contactId","newContacts","contact","form","onSubmit","e","preventDefault","some","nameEl","alert","prevState","htmlFor","pattern","event","currentTarget","required","btn","normalizedFilter","toLowerCase","includes","getFilterContact","App","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.29a9c094.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__39frI\",\"label\":\"Form_label__2Qnju\",\"input\":\"Form_input__chM2n\",\"btn\":\"Form_btn__1F15b\",\"title\":\"Form_title__3nsI1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts\":\"Contacts_contacts__SM8OV\",\"contacts_list\":\"Contacts_contacts_list__1V1q-\",\"contacts_item\":\"Contacts_contacts_item__3U7Gv\",\"btn_delete\":\"Contacts_btn_delete__1yO3_\",\"title\":\"Contacts_title__tohTC\"};","import React from \"react\";\nimport styles from \"./Contacts.module.css\";\n\nconst Contacts = ({ contactNames, onDeleteContact }) => {\n  return (\n    <section className={styles.contacts}>\n      <h2 className={styles.title}>Contacts</h2>\n      <ul className={styles.contacts_list}>\n        {contactNames.map((elem) => {\n          return (\n            <li key={elem.id} className={styles.contacts_item}>\n              {elem.name}: {elem.number}\n              <button\n                className={styles.btn_delete}\n                type=\"button\"\n                onClick={() => onDeleteContact(elem.id)}\n              >\n                Delete\n              </button>\n            </li>\n          );\n        })}\n      </ul>\n    </section>\n  );\n};\n\nexport default Contacts;\n","import React from \"react\";\nimport styles from \"../Form/Form.module.css\";\n\nconst Filter = ({ nameFilter, onChangeFilter }) => {\n  return (\n    <>\n      <h3 className={styles.title}>Find contacts by name</h3>\n      <label className={styles.label}>\n        <input\n          type=\"text\"\n          className={styles.input}\n          name=\"filter\"\n          value={nameFilter}\n          onChange={onChangeFilter}\n        />\n      </label>\n    </>\n  );\n};\nexport default Filter;\n","import React, { useState, useEffect } from \"react\";\nimport shortid from \"shortid\";\nimport Contacts from \"../Contacts/Contacts\";\nimport Filter from \"../Filter/Filter\";\nimport styles from \"./Form.module.css\";\n\nexport default function Form() {\n  const [contacts, setContacts] = useState([\n    {\n      id: \"\",\n      name: \"\",\n      number: \"\",\n    },\n  ]);\n\n  const [nameInput, setNameInput] = useState(\"\");\n  const [phoneNumber, setPhoneNumber] = useState(\"\");\n  const [filter, setFilter] = useState(\"\");\n  const nameInputId = shortid.generate();\n  const phoneInputId = shortid.generate();\n\n  useEffect(() => {\n    const contacts = window.localStorage.getItem(\"contacts\");\n    const parsedContacts = JSON.parse(contacts);\n    if (parsedContacts) {\n      setContacts(parsedContacts);\n    }\n  }, []);\n\n  useEffect(() => {\n    window.localStorage.setItem(\"contacts\", JSON.stringify(contacts));\n  }, [contacts]);\n\n  const handleInputContactChange = (event) => {\n    const { value } = event.currentTarget;\n    setNameInput(event.currentTarget.value);\n  };\n\n  const handleInputPhoneChange = (event) => {\n    const { value } = event.currentTarget;\n    setPhoneNumber(value);\n  };\n\n  const changeFilter = (event) => {\n    setFilter(event.currentTarget.value);\n  };\n\n  const handleSubmite = (e) => {\n    e.preventDefault();\n    const idContact = shortid.generate();\n    const contact = {\n      id: idContact,\n      name: nameInput,\n      number: phoneNumber,\n    };\n\n    if (contacts.some((nameEl) => nameEl.name === nameInput)) {\n      reset();\n      return alert(\"Name is already in contacts\");\n    }\n\n    setContacts((prevState) => [...prevState, contact]);\n    reset();\n  };\n\n  const reset = () => {\n    setNameInput(\"\");\n    setPhoneNumber(\"\");\n  };\n\n  const getFilterContact = () => {\n    const normalizedFilter = filter.toLowerCase();\n    const filterContact = contacts.filter((contact) =>\n      contact.name.includes(normalizedFilter)\n    );\n    return filterContact;\n  };\n\n  const deleteContact = (contactId) => {\n    const newContacts = contacts.filter((contact) => contact.id !== contactId);\n    setContacts(newContacts);\n  };\n\n  return (\n    <>\n      <form className={styles.form} onSubmit={handleSubmite}>\n        <label htmlFor={nameInputId} className={styles.label}>\n          Name\n          <input\n            id={nameInputId}\n            className={styles.input}\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            value={nameInput}\n            onChange={handleInputContactChange}\n            required\n          />\n        </label>\n        <label htmlFor={phoneInputId} className={styles.label}>\n          Number\n          <input\n            id={phoneInputId}\n            className={styles.input}\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            value={phoneNumber}\n            onChange={handleInputPhoneChange}\n            required\n          />\n        </label>\n        <button className={styles.btn} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n\n      <Filter nameFilter={filter} onChangeFilter={changeFilter} />\n      {contacts.name !== \"\" && filter === \"\" ? (\n        <Contacts contactNames={contacts} onDeleteContact={deleteContact} />\n      ) : (\n        <Contacts\n          contactNames={getFilterContact()}\n          onDeleteContact={deleteContact}\n        />\n      )}\n    </>\n  );\n}\n","import React, { Component } from \"react\";\nimport Form from \"./components/Form/Form\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>Phonebook</h1>\n        <Form />\n      </div>\n    );\n  }\n}\n\nexport { App };\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { App } from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}